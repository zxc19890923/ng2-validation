1、安装模块

npm install ng2-validation --save
2、配置app.module.ts

import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import {CustomFormsModule} from "ng2-validation";
...
imports: [
    FormsModule,
    CustomFormsModule,
    ReactiveFormsModule
  ],
...
3、配置组件，官方文档有详细的配置方法。

import {Component} from '@angular/core';
// 1. 引入forms中的组件
import {FormGroup, FormControl} from '@angular/forms';
// 2. 引入ng2-validation中的组件
import {CustomValidators} from 'ng2-validation';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  // 3. 定义表单组
  form:FormGroup;

  constructor() {
    // 4. 初始化表达组里面的内容
    this.form = new FormGroup({
      // 定义form.field 是一个区间
      field: new FormControl('', CustomValidators.range([5, 9])),
      // 定义form.num 是数字类型
      num: new FormControl('', CustomValidators.number)
    });
  }
}
4、配置模板，使用

<br/>
<br/>
<br/>
<div class="container">
  <form #myForm="ngForm">
    <div>
      <input type="text" [(ngModel)]="form.field" name="field" #field="ngModel" [rangeLength]="[5, 9]"
             class="form-control" required/>
      <p class="text-danger" *ngIf="field.errors?.rangeLength">输入字符长度在5-9之间</p>
    </div>
    <p></p>
    <div>
      <input type="text" [(ngModel)]="form.num" name="num" #num="ngModel" number class="form-control" required/>
      <p class="text-danger" *ngIf="num.errors?.number">只能输入数字</p>
    </div>
    <p></p>
    <!--这个是提交按钮,如果条件不满足, 提价按钮为只读-->
    <p>
      <button [disabled]="num.errors?.number || !myForm.form.valid" class="btn btn-primary">提交</button>
    </p>
  </form>
</div>

5、添加多个条件

1. 组件配置
constructor() {
    // 初始化表达组里面的内容
    this.form = new FormGroup({
      username: new FormControl('', CustomValidators.range([5, 9])),
      max: new FormControl('', CustomValidators.max(100)),
      min: new FormControl('', CustomValidators.min(0)),
      num: new FormControl('', CustomValidators.number),
      phone: new FormControl('', CustomValidators.phone('zh-CN'))
    });
  }
2. 模块配置
<div>
      <input type="text" [(ngModel)]="form.num" name="num" #num="ngModel" #max="ngModel" #min="ngModel" number class="form-control" required
             placeholder="年龄" [max]="100" [min]="0"/>
      <p class="text-danger" *ngIf="num.errors?.number || max.errors?.max || min.errors?.min">只能输入0-100数字</p>
</div>
